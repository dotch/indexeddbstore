/**
 * indexeddbstore - A simple indexeddb wrapper.
 * @version v0.0.1
 * @link https://github.com/dotch/indexeddbstore
 * @license Apache-2.0
 */
!function(){function t(t){return new Promise(function(n,e){t.onsuccess=function(){n(t.result)},t.onerror=function(n){n.preventDefault(),e(t.error)}})}function n(t,n,a){var o=this;o._ready=!1,o.storeName=t,o.indices=a,n?(o.key=n,o.autoIncrement=!1):(o.key="id",o.autoIncrement=!0),o.ready=new Promise(function(t,n){r||n("No indexedDB implementation found!");var a=r.open(o.storeName,e);a.onerror=function(){n(a.error)},a.onsuccess=function(){o.db=a.result,t(o)},a.onupgradeneeded=function(){o.db=a.result;for(var t=o.db.createObjectStore(o.storeName,{keyPath:o.key,autoIncrement:o.autoIncrement}),n=0;n<o.indices.length;n++)t.createIndex(o.indices[n],o.indices[n])},a.onerror=n}),o.ready.then(function(){o._ready=!0})}var e=1,r=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB,a=(window.IDBTransaction||window.webkitIDBTransaction||window.mozIDBTransaction||window.msIDBTransaction,window.IDBKeyRange||window.webkitIDBKeyRange||window.msIDBKeyRange);n.prototype={_getTransactionAndStore:function(t){var n=this;t="undefined"!=typeof t?t:"readonly";var e=n.db.transaction(n.storeName,t),r=e.objectStore(n.storeName);return{transaction:e,store:r}},_awaitReady:function(t,n){var e=this;return e._ready?t.apply(e,n):e.ready.then(function(){return t.apply(e,n)})},insert:function(){var t=this;return t._awaitReady(t._insert,arguments)},_insert:function(n){var e=this,r=e._getTransactionAndStore("readwrite"),a=t(r.store.add(n));return a.abort=function(){r.transaction.abort()},a},set:function(){var t=this;return t._awaitReady(t._set,arguments)},_set:function(n){var e=this,r=e._getTransactionAndStore("readwrite"),a=t(r.store.put(n));return a.abort=function(){r.transaction.abort()},a},setMany:function(){var t=this;return t._awaitReady(t._setMany,arguments)},_setMany:function(t){for(var n=this,e=n._getTransactionAndStore("readwrite"),r=[],a=0;a<t.length;a++)r.push(e.store.put(t[a]));var o=Promise.all(r);return o.abort=function(){e.transaction.abort()},o},get:function(){var t=this;return t._awaitReady(t._get,arguments)},_get:function(n){var e=this,r=e._getTransactionAndStore(),a=t(r.store.get(n));return a.abort=function(){r.transaction.abort()},a},remove:function(){var t=this;return t._awaitReady(t._remove,arguments)},_remove:function(n){var e=this,r=e._getTransactionAndStore("readwrite"),a=t(r.store.delete(n));return a.abort=function(){r.transaction.abort()},a},getMany:function(){var t=this;return t._awaitReady(t._getMany,arguments)},_getMany:function(t){t=t||{};var n,e=this,r=e._getTransactionAndStore(),o=0,i=t.start,s=t.end,u=t.count||void 0,c=t.offset||0,d=0===c?!1:!0,f=t.reverse?"prev":"next",w=t.orderby;n=i&&s?a.bound(i,s):i?a.lowerBound(i):s?a.upperBound(s):null;var v=[],_=new Promise(function(t){var a;if(w&&w!==e.key){var i=r.store.index(w);a=i.openCursor(n,f)}else a=r.store.openCursor(n,f);a.onsuccess=function(n){var e=n.target.result;!e||void 0!==o&&o>=u?t(v):d?(d=!1,e.advance(c)):(v.push(e.value),o++,e.continue())}});return _.abort=function(){r.transaction.abort()},_},size:function(){var t=this;return t._awaitReady(t._size)},_size:function(){var n=this,e=n._getTransactionAndStore(),r=t(e.store.count());return r.abort=function(){e.transaction.abort()},r},clear:function(){var t=this;return t._awaitReady(t._clear)},_clear:function(){var n=this,e=n._getTransactionAndStore("readwrite"),r=t(e.store.clear());return r.abort=function(){e.transaction.abort()},r}},window.IndexedDbStore=n}();